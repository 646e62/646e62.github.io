---
title: "A basic statutory expert system"
author: "Daniel Booy"
date: "2023-06-24"
categories: [article, code, analysis]
image: "ai.png"
abstract: "Despite advances in generative AI, expert legal systems will continue to be necessary for legal tech and its applications. These systems can anticipate the hallucinations that generative AIs produce, guide them by prompting them along a control flow, and easily expose the logic underlying a legal AI's decision. In this post I outline a simple and intuitively-coded expert system that addresses, at a very high level, a narrow, basic legal problem: whether a criminal defendant is guilty of high treason."
---

# Introduction

When reading up on legal tech's intersections with AI and expert systems, researchers and writers frequently mention Robert Kowalski, Fariba Sadri, and Marek Sogot's paper "The British Nationality Act as a Logic Program"[^bna_paper] as a black swan event in legal AI.[^bna_paper_reaction] Their paper outlined an expert legal system the authors designed and coded in Prolog. Reading through their report, it seemed that a Python program could produce similar results. This little project aims to do that, starting with a simple statutory example.

# High treason

## What is high treason?

High treason is a criminal offence created by section 46(1) of the Canadian _Criminal Code_. When I wrote this post, the offence read as follows:

> **High treason**
>
> **46 (1)** Every one commits high treason who, in Canada,
>
> (a) kills or attempts to kill Her Majesty, or does her any bodily harm tending to death or destruction, maims or wounds her, or imprisons or restrains her;
>
> (b) levies war against Canada or does any act preparatory thereto; or
>
> (c) assists an enemy at war with Canada, or any armed forces against whom Canadian Forces are engaged in hostilities, whether or not a state of war exists between Canada and the country whose forces they are.

Although treason has been a codified criminal offence since the _Criminal Code, 1892_, the distinction between _treason_ and _high treason_ is relatively recent. Before Parliament made significant amendments to the _Criminal Code_ in the 1970s, treason and high treason were a single, albeit multi-faceted, codified offence.[^treason_high_treason_comparisons] Historically, treason was one of three offences punishable by death,[^other_capital_offences] and remains one of the most severe offences in Canadian criminal law.

## Why high treason?

There are several key advantages to working with an offence like high treason:

* **Minimal statutory elements.** _Criminal Code_ s 46 contains a reasonably straightforward control flow with only a few possible outcomes each time the program asks the user to choose between options. 
* **Few conditional layers.** High treason's decision tree only contains a few conditional layers. At most, the user must make two decisions before reaching a result and can arrive at a result after as few as one decision. This conditional superficiality makes high treason easy to diagram and demonstrates some basic expert legal system fundamentals.
* **Underlitigated.** Although all Canadian criminal offences begin as codified statutes, most accumulate greater complexity through litigation. Courts ask and answer what certain words mean in certain circumstances and often add dozens of conditions to one or more basic elemental steps. High treason is a relatively recently created and infrequently charged offence, with few (if any) reported cases turning up in any of the usual repositories. Infrequently charged offences are, by necessity, rarely judicially considered. This infrequency limits the degree to which the statute can be interpretively bifurcated and grow more complex.
* **Highly integrated.** Despite not appearing much in reported case decisions, high treason is a serious offence that attracts special consideration throughout the _Criminal Code_, such as punishment availability, mandatory trial procedures, evidentiary prerequisites, jurisdictional nuances, etc. These conditions require the basic expert system I develop here to remain extensible to these future inputs.

High treason's relative conceptual simplicity makes it an ideal offence to begin development. It is sufficiently complex to allow me to experiment with navigating control points while being straightforward enough to be captured by an automated expert system that answers a simple legal question. 

## The project's scope

This project's goal is to encapsulate high treason within an expert legal system fully. The project must account for the punishment, procedural, and jurisdictional components discussed above to be considered complete. But to start, I will represent high treason's offence section at a high level. Once the basic control flow is outlined and codified, it can be made more extensible and further developed to incorporate these additional components.

# Elementary control flow

One way of describing this high-level view is as an "elementary control flow" representation. By "elementary," I mean it represents the offence's essential elements.[^offence_elements] By "control flow," I refer to the decision trees commonly used in computer science and juridical reasoning.

## High treason's elements

_Criminal Code_ s 46(1)'s wording describes the following offence elements:

1. The offence took place in Canada; AND
2. Where the complainant is the sovereign, the defendant:
  a.  Killed the sovereign; OR
  b. Attempted to kill the sovereign; OR
  c. Caused the sovereign bodily harm tending to cause 
    i. Death; OR
    ii. Destruction; OR
  d. Maims the sovereign; OR
  e. Wounds the sovereign; OR
  f. Imprisons the sovereign; OR
  g. Restrains the sovereign; OR
3. Where the complainant is Canada, the defendant:
  a. Levied war against Canada; OR
  b. Prepared to levy war against Canada; OR
  c. Assists an enemy at war with Canada; OR
  d. Assists an armed force engaged in hostilities with Canada.

Where none of these conditions obtain, the defendant did not commit high treason.

## High treason's elements as a flowchart

These elements can also be represented as follows:

```{mermaid}
flowchart TD
    A[Did the defendant commit high treason?] --> B1{The act took place in Canada}
    B1 -->|No| B2(Not guilty)
    B1 -->|Yes| C{Who is the complainant}
    C --> D[The sovereign]
    C --> E[Canada]
    C --> F["¬(The sovereign ∨ Canada)"]
    F --> G(Not guilty)
    E --> H0{Did the defendant}
    H0 --> H1[Levy war against Canada]
    H1 -->|"∨"| H2[Prepare to levy war against Canada]
    H2 -->|"∨"| H3[Assist an enemy at war with Canada]
    H3 -->|"∨"| H4[Assist a hostile armed force engaged with Canada]
    H4 -->|Yes| I1(Guilty)
    H4 -->|No| I2(Not guilty)
    D --> J0{Did the defendant}
    J0 --> J1[Kill the sovereign]
    J1 -->|"∨"| J2[Attempt to kill the sovereign]
    J2 -->|"∨"| J3[Do bodily harm to the sovereign tending to cause death]
    J3 -->|"∨"| J4[Do bodily harm to the sovereign tending to cause destruction]
    J4 -->|"∨"| J5[Maim the sovereign]
    J5 -->|"∨"| J6[Wound the sovereign]
    J6 -->|"∨"| J7[Imprison the sovereign]
    J7 -->|"∨"| J8[Restrain the sovereign]
    J8 -->|Yes| K1(Guilty)
    J8 -->|No| K2(Not guilty)
```
_Figure 1_: An ugly flowchart describing the basic expert system's flow control

Viewed this way, it is apparent how this decision tree might be easily adapted into a Python script that can, at a high level with sufficient and reliable information, decide whether a defendant committed high treason.

{{< embed ../../notebooks/high_treason_expert_system.ipynb >}}

# AI disclaimer

I've used the following AI tools to help create this project:

* **Spelling and grammar.** Grammarly (non-generative)
* **Text summarization.** ChatGPT-3.5 & 4
* **Code.** ChatGPT-3.5 & 4, GitHub Copilot (GPT-3.5 based)
* **Legal research.** CanLII (non-generative)
* **Images.** DALL-E


[^bna_paper]: See <http://www.doc.ic.ac.uk/~rak/papers/British%20Nationality%20Act.pdf>
[^bna_paper_reaction]: See e.g. [AI & Law: British Nationality Act Unexpectedly Spurred AI And Law](https://lance-eliot.medium.com/ai-law-british-nationality-act-unexpectedly-spurred-ai-and-law-404aea03386a), [How the British Nationality Act Served to Inadvertently Spur AI and the Law](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3975784).
[^treason_high_treason_comparisons]: Compare _Criminal Code, 1952_ s 46(1) with Aidan R. Vining, "Reforming Canadian Sentencing Practices: Problems, Prospects and Lessons" (1979) 17:2 Osgoode Hall L J 355 at note 116.
[^other_capital_offences]: The other historically capital offences were murder and rape.
[^offence_elements]: See e.g. <https://en.wikibooks.org/wiki/Canadian_Criminal_Law/Proof_of_Elements>